apply plugin: 'com.android.library'


com.android.ddmlib.DdmPreferences.setTimeOut(600000)
group = 'io.syncano'
version = '4.0.7'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 2
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "STAGING_SERVER_URL", staging_server_url
        buildConfigField "String", "INSTANCE_NAME", instance_name
        buildConfigField "String", "API_KEY", api_key
        buildConfigField "String", "API_KEY_USERS", api_key_users
        buildConfigField "String", "FACEBOOK_TOKEN", facebook_token
        buildConfigField "String", "GOOGLE_TOKEN", google_token
        buildConfigField "String", "LINKEDIN_TOKEN", linkedin_token
        buildConfigField "String", "TWITTER_TOKEN", twitter_token
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
        }
    }

    adbOptions {
        timeOutInMs 600000
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.6.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.httpcomponents:httpclient:4.0.1'
    testCompile 'org.apache.httpcomponents:httpcore:4.0.1'
    testCompile 'org.bouncycastle:bcprov-jdk15on:1.53'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

task(makeJar) << {
    // Empty. We'll add dependencies for this task below
}

// Generate jar creation tasks for all build variants
android.libraryVariants.all { variant ->
    String taskName = "makeJar${variant.name.capitalize()}"

    // Create a jar by extracting it from the assembled .aar
    // This ensures that products distributed via .aar and .jar exactly the same bits
    task(taskName, type: Copy) {
        String archiveName = "${project.name}-${variant.name}"
        String outputDir = "${buildDir.getPath()}/outputs"

        dependsOn "assemble${variant.name.capitalize()}"
        from(zipTree("${outputDir}/aar/${archiveName}.aar"))
        into("${outputDir}/jar/")
        include('classes.jar')
        rename('classes.jar', "${archiveName}-${variant.mergedFlavor.versionName}.jar")
    }

    makeJar.dependsOn tasks[taskName]
}
apply from: 'release-script.gradle'